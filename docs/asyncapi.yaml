asyncapi: 3.0.0
info:
  title: Viewer API
  version: ''
channels:
  /competition/control:
    address: /competition/control
    messages:
      publish.CompetitionControlCommand:
        id: aaa
        $ref: '#/components/messages/CompetitionControlCommand'
      publish.HostConfigurationFromClient:
        $ref: '#/components/messages/HostConfigurationFromClient'
      subscribe.Error:
        $ref: '#/components/messages/Error'
      subscribe.HostConfigurationFromServer:
        $ref: '#/components/messages/HostConfigurationFromServer'
  /competition/updates:
    address: /competition/updates
    messages:
      subscribe.CompetitionUpdate:
        $ref: '#/components/messages/CompetitionUpdate'
      subscribe.Error:
        $ref: '#/components/messages/Error'
operations:
  /competition/control.publish:
    action: receive
    channel:
      $ref: '#/channels/~1competition~1control'
    messages:
      - $ref: '#/channels/~1competition~1control/messages/publish.CompetitionControlCommand'
      - $ref: '#/channels/~1competition~1control/messages/publish.HostConfigurationFromClient'
  /competition/control.subscribe:
    action: send
    channel:
      $ref: '#/channels/~1competition~1control'
    messages:
      - $ref: '#/channels/~1competition~1control/messages/subscribe.Error'
      - $ref: '#/channels/~1competition~1control/messages/subscribe.HostConfigurationFromServer'
  /competition/updates.subscribe:
    action: send
    channel:
      $ref: '#/channels/~1competition~1updates'
    messages:
      - $ref: '#/channels/~1competition~1updates/messages/subscribe.CompetitionUpdate'
      - $ref: '#/channels/~1competition~1updates/messages/subscribe.Error'
components:
  messages:
    CompetitionControlCommand:
      payload:
        type: object
        additionalProperties: false
        required:
          - messageType
          - token
          - command
        properties:
          messageType:
            type: string
            const: COMPETITION_CONTROL_COMMAND
          token:
            type: string
          command:
            type: string
            enum:
              - START
              - END
              - RESET
              - GET_HOST_CONFIGURATION
    CompetitionUpdate:
      payload:
        type: object
        additionalProperties: false
        properties:
          messageType:
            type: string
            const: COMPETITION_UPDATE
          cameras:
            type: array
            items:
              type: object
              additionalProperties: false
              required:
                - cameraId
                - frameData
                - height
                - width
              properties:
                cameraId:
                  type: integer
                frameData:
                  type: string
                  format: binary
                height:
                  type: integer
                width:
                  type: integer
          events:
            type: array
            items:
              oneOf:
                - $ref: '#/components/schemas/PlayerTryExtinguishEvent'
          players:
            type: array
            additionalProperties: false
            required:
              - playerId
              - positionHead
              - positionTail
            properties:
              playerId:
                type: integer
              positionHead:
                $ref: '#/components/schemas/Position'
              positionTail:
                $ref: '#/components/schemas/Position'
    Error:
      payload:
        type: object
        additionalProperties: false
        required:
          - messageType
          - errorCode
          - message
        properties:
          messageType:
            type: string
            const: ERROR
          errorCode:
            type: integer
          message:
            type: string
    HostConfigurationFromClient:
      payload:
        type: object
        additionalProperties: false
        required:
          - messageType
          - token
          - configuration
        properties:
          messageType:
            type: string
            const: HOST_CONFIGURATION_FROM_CLIENT
          token:
            type: string
          configuration:
            $ref: '#/components/schemas/HostConfiguration'
    HostConfigurationFromServer:
      payload:
        type: object
        additionalProperties: false
        required:
          - messageType
          - availableCameras
          - availableSerialPorts
          - configuration
        properties:
          messageType:
            type: string
            const: HOST_CONFIGURATION_FROM_SERVER
          availableCameras:
            type: array
            items:
              type: integer
          availableSerialPorts:
            type: array
            items:
              type: string
          configuration:
            $ref: '#/components/schemas/HostConfiguration'
  schemas:
    PlayerTryExtinguishEvent:
      type: object
      additionalProperties: false
      required:
        - eventType
        - targetFire
      properties:
        eventType:
          type: string
          const: PLAYER_TRY_EXTINGUISH
        targetFire:
          type: integer
    Position:
      type: object
      additionalProperties: false
      required:
        - x
        - y
      properties:
        x:
          type: number
        y:
          type: number
    PositionInt:
      type: object
      additionalProperties: false
      required:
        - x
        - y
      properties:
        x:
          type: integer
        y:
          type: integer
    HostConfiguration:
      type: object
      additionalProperties: false
      required:
        - cameras
        - player
        - serialPort
      properties:
        cameras:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - cameraId
            properties:
              cameraId:
                type: integer
              calibration:
                type: object
                additionalProperties: false
                required:
                  - topLeft
                  - topRight
                  - bottomLeft
                  - bottomRight
                properties:
                  topLeft:
                    $ref: '#/components/schemas/Position'
                  topRight:
                    $ref: '#/components/schemas/Position'
                  bottomLeft:
                    $ref: '#/components/schemas/Position'
                  bottomRight:
                    $ref: '#/components/schemas/Position'
              properties:
                type: object
                additionalProperties: false
                properties:
                  frameWidth:
                    type: number
                  frameHeight:
                    type: number
                  fps:
                    type: number
                  brightness:
                    type: number
                  contrast:
                    type: number
                  saturation:
                    type: number
                  hue:
                    type: number
                  gain:
                    type: number
                  exposure:
                    type: number
                  monocrome:
                    type: number
                  sharpness:
                    type: number
                  autoExposure:
                    type: number
                  gamma:
                    type: number
                  temperature:
                    type: number
                  whiteBalanceRedV:
                    type: number
                  zoom:
                    type: number
                  focus:
                    type: number
                  isoSpeed:
                    type: number
                  iris:
                    type: number
                  autofocus:
                    type: number
                  autoWb:
                    type: number
                  wbTemperature:
                    type: number
              recognition:
                type: object
                additionalProperties: false
                required:
                  - hueCenter
                  - hueRange
                  - saturationCenter
                  - saturationRange
                  - valueCenter
                  - valueRange
                  - minArea
                  - showMask
                properties:
                  hueCenter:
                    type: number
                  hueRange:
                    type: number
                  saturationCenter:
                    type: number
                  saturationRange:
                    type: number
                  valueCenter:
                    type: number
                  valueRange:
                    type: number
                  minArea:
                    type: number
                  showMask:
                    type: boolean
        player:
          type: object
          additionalProperties: false
          properties:
            camera:
              type: integer
            serialPort:
                type: string
        serialPort:
          type: object
          additionalProperties: false
          required:
            - portName
          properties:
            portName:
              type: string
            baudRate:
              type: integer
